{"ast":null,"code":"import _classCallCheck from \"/Users/srishti/Sites/projects/training2019/react/redux-todoApp/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/srishti/Sites/projects/training2019/react/redux-todoApp/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/srishti/Sites/projects/training2019/react/redux-todoApp/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/srishti/Sites/projects/training2019/react/redux-todoApp/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/srishti/Sites/projects/training2019/react/redux-todoApp/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/srishti/Sites/projects/training2019/react/redux-todoApp/src/Components/List.js\";\nimport React, { Component } from 'react';\nimport store from \"../Reducers/index\";\nimport checkmate, { DeleteTodo, ToggleTodo, EditTodo } from \"../Actions/Action\";\nimport keyPress from \"../Actions/Action\";\nimport removeItem from \"../Actions/Action\";\nimport \"../style.css\"; // import initState from \"../Reducers/index\";\n\nvar List =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(List, _Component);\n\n  function List() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, List);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(List)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handleRemove = function (index) {\n      store.dispatch(DeleteTodo(index));\n    };\n\n    _this.handleToggle = function (index) {\n      store.dispatch(ToggleTodo(index));\n    };\n\n    _this.handleKeyPress = function (index, e) {\n      console.log(\"Index : \" + index + \" event \" + e + \" Value = \" + e.target.value);\n      store.dispatch(EditTodo(index));\n    };\n\n    return _this;\n  }\n\n  _createClass(List, [{\n    key: \"render\",\n    value: function render() {\n      console.log(store.getState().filter.active);\n      return React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, \" Checking \"); // if(store.getState().filter.all === true) {\n      //   return (\n      //     <ul className = \"list-group\">\n      //         {store.getState().todoitems.map( (item,key) =>        \n      //     <li key = {key} className=\"list-group-item\"> \n      //     <input type=\"checkbox\" className=\"float-left my-3 strike\" onClick={this.handleToggle.bind(this,key)} checked = { item.isCompleted ? true : false }/> \n      //     <input type=\"text\" value={item.caption} className=\"myinput strike\" onChange={this.handleKeyPress.bind(this,key)} style={{textDecoration: item.isCompleted ? \"line-through\":\"none\"}} disabled={item.isCompleted ? true : false}/>              \n      //     <button className=\"btn btn-danger mybtn float-right\" onClick ={this.handleRemove.bind(this,key)} > Delete </button>               \n      //     </li>)}\n      //     </ul>\n      //     )\n      // }\n      // else if(store.getState().filter.active === true){\n      //     return (\n      //         <ul className = \"list-group\">\n      //             {store.getState().todos.map( (item,key) =>        \n      //         <li key = {key} className=\"list-group-item\"> \n      //         <input type=\"checkbox\" className=\"float-left my-3 strike\" onClick={this.handleToggle.bind(this,key)} checked = { item.isCompleted ? true : false }/> \n      //         <input type=\"text\" value={item.caption} className=\"myinput strike\" onChange={this.handleKeyPress.bind(this,key)} style={{textDecoration: item.isCompleted ? \"line-through\":\"none\"}} disabled={item.isCompleted ? true : false}/>              \n      //         <button className=\"btn btn-danger mybtn float-right\" onClick ={this.handleRemove.bind(this,key)} > Delete </button>               \n      //         </li>)}\n      //         </ul>\n      //         );\n      // }\n      // else if (store.getState().filter.completed === true){\n      //     return (\n      //         <ul className = \"list-group\">\n      //             {store.getState().todos.map( (item,key) =>        \n      //         <li key = {key} className=\"list-group-item\"> \n      //         <input type=\"checkbox\" className=\"float-left my-3 strike\" onClick={this.handleToggle.bind(this,key)} checked = { item.isCompleted ? true : false }/> \n      //         <input type=\"text\" value={item.caption} className=\"myinput strike\" onChange={this.handleKeyPress.bind(this,key)} style={{textDecoration: item.isCompleted ? \"line-through\":\"none\"}} disabled={item.isCompleted ? true : false}/>              \n      //         <button className=\"btn btn-danger mybtn float-right\" onClick ={this.handleRemove.bind(this,key)} > Delete </button>               \n      //         </li>)}\n      //         </ul>\n      //         );\n      // }\n    }\n  }]);\n\n  return List;\n}(Component);\n\nexport default List;","map":{"version":3,"sources":["/Users/srishti/Sites/projects/training2019/react/redux-todoApp/src/Components/List.js"],"names":["React","Component","store","checkmate","DeleteTodo","ToggleTodo","EditTodo","keyPress","removeItem","List","handleRemove","index","dispatch","handleToggle","handleKeyPress","e","console","log","target","value","getState","filter","active"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,OAAOC,SAAP,IAAoBC,UAApB,EAAgCC,UAAhC,EAA4CC,QAA5C,QAA2D,mBAA3D;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,OAAOC,UAAP,MAAuB,mBAAvB;AACA,OAAO,cAAP,C,CAEA;;IAEMC,I;;;;;;;;;;;;;;;;;;UAEFC,Y,GAAe,UAACC,KAAD,EAAS;AACpBT,MAAAA,KAAK,CAACU,QAAN,CAAeR,UAAU,CAACO,KAAD,CAAzB;AACH,K;;UACDE,Y,GAAe,UAACF,KAAD,EAAW;AACtBT,MAAAA,KAAK,CAACU,QAAN,CAAeP,UAAU,CAACM,KAAD,CAAzB;AACH,K;;UAEDG,c,GAAiB,UAACH,KAAD,EAAOI,CAAP,EAAa;AAC1BC,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAaN,KAAb,GAAsB,SAAtB,GAAkCI,CAAlC,GAAsC,WAAtC,GAAoDA,CAAC,CAACG,MAAF,CAASC,KAAzE;AAECjB,MAAAA,KAAK,CAACU,QAAN,CAAeN,QAAQ,CAACK,KAAD,CAAvB;AACJ,K;;;;;;;6BAEQ;AACPK,MAAAA,OAAO,CAACC,GAAR,CAAYf,KAAK,CAACkB,QAAN,GAAiBC,MAAjB,CAAwBC,MAApC;AACA,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP,CAFO,CAGL;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEH;;;;EA7DcrB,S;;AAiEnB,eAAeQ,IAAf","sourcesContent":["import React, { Component } from 'react'\nimport store from \"../Reducers/index\";\nimport checkmate, { DeleteTodo, ToggleTodo ,EditTodo} from \"../Actions/Action\";\nimport keyPress from \"../Actions/Action\";\nimport removeItem from \"../Actions/Action\";\nimport \"../style.css\";\n\n// import initState from \"../Reducers/index\";\n\nclass List extends Component {\n\n    handleRemove = (index)=>{\n        store.dispatch(DeleteTodo(index));\n    }\n    handleToggle = (index) => {\n        store.dispatch(ToggleTodo(index));\n    }\n\n    handleKeyPress = (index,e) => {\n        console.log(\"Index : \" + index +  \" event \" + e + \" Value = \" + e.target.value);\n\n         store.dispatch(EditTodo(index));\n    }\n\n    render() {\n      console.log(store.getState().filter.active);\n      return(<h1> Checking </h1>);\n        // if(store.getState().filter.all === true) {\n        //   return (\n        //     <ul className = \"list-group\">\n        //         {store.getState().todoitems.map( (item,key) =>        \n        //     <li key = {key} className=\"list-group-item\"> \n          \n        //     <input type=\"checkbox\" className=\"float-left my-3 strike\" onClick={this.handleToggle.bind(this,key)} checked = { item.isCompleted ? true : false }/> \n            \n        //     <input type=\"text\" value={item.caption} className=\"myinput strike\" onChange={this.handleKeyPress.bind(this,key)} style={{textDecoration: item.isCompleted ? \"line-through\":\"none\"}} disabled={item.isCompleted ? true : false}/>              \n        //     <button className=\"btn btn-danger mybtn float-right\" onClick ={this.handleRemove.bind(this,key)} > Delete </button>               \n        //     </li>)}\n        //     </ul>\n        //     )\n        // }\n        // else if(store.getState().filter.active === true){\n        //     return (\n        //         <ul className = \"list-group\">\n        //             {store.getState().todos.map( (item,key) =>        \n        //         <li key = {key} className=\"list-group-item\"> \n              \n        //         <input type=\"checkbox\" className=\"float-left my-3 strike\" onClick={this.handleToggle.bind(this,key)} checked = { item.isCompleted ? true : false }/> \n                \n        //         <input type=\"text\" value={item.caption} className=\"myinput strike\" onChange={this.handleKeyPress.bind(this,key)} style={{textDecoration: item.isCompleted ? \"line-through\":\"none\"}} disabled={item.isCompleted ? true : false}/>              \n        //         <button className=\"btn btn-danger mybtn float-right\" onClick ={this.handleRemove.bind(this,key)} > Delete </button>               \n        //         </li>)}\n        //         </ul>\n        //         );\n        // }\n        // else if (store.getState().filter.completed === true){\n        //     return (\n        //         <ul className = \"list-group\">\n        //             {store.getState().todos.map( (item,key) =>        \n        //         <li key = {key} className=\"list-group-item\"> \n              \n        //         <input type=\"checkbox\" className=\"float-left my-3 strike\" onClick={this.handleToggle.bind(this,key)} checked = { item.isCompleted ? true : false }/> \n                \n        //         <input type=\"text\" value={item.caption} className=\"myinput strike\" onChange={this.handleKeyPress.bind(this,key)} style={{textDecoration: item.isCompleted ? \"line-through\":\"none\"}} disabled={item.isCompleted ? true : false}/>              \n        //         <button className=\"btn btn-danger mybtn float-right\" onClick ={this.handleRemove.bind(this,key)} > Delete </button>               \n        //         </li>)}\n        //         </ul>\n        //         );\n        // }\n       \n    }\n}\n\n\nexport default List;\n"]},"metadata":{},"sourceType":"module"}