{"ast":null,"code":"import _toConsumableArray from \"/Users/srishti/Sites/projects/training2019/react/redux-todoApp/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport { createStore } from \"redux\";\nexport var initState = {\n  todoitems: [{\n    caption: \"Java\",\n    isCompleted: false\n  }]\n};\n\nvar todoreducer = function todoreducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  console.log(\"Action triggered : \" + action.type);\n\n  switch (action.type) {\n    case \"ADD-TODO\":\n      return {\n        todoitems: [].concat(_toConsumableArray(state.todoitems), [{\n          caption: action.todo,\n          isCompleted: action.isCompleted\n        }])\n      };\n\n    case \"REMOVE-TODO\":\n      return {\n        todoitems: state.todoitems.filter(function (_, i) {\n          return i !== action.index;\n        })\n      };\n\n    case \"TOGGLE-TODO\":\n      console.log(\"IN toggle caption = \" + state.todoitems[action.index].caption);\n      return state.todoitems[action.index].isCompleted = !state.todoitems[action.index].isCompleted;\n    // return state.todoitems.map(todoitems => todoitems.index === action.index) ? {\n    //     ...state.todoitems,\n    //     isCompleted: !state.todoitems.index.isCompleted\n    // } : state.todoitems\n\n    default:\n      return state.todoitems;\n  }\n};\n\nvar store = createStore(todoreducer);\nexport default store;","map":{"version":3,"sources":["/Users/srishti/Sites/projects/training2019/react/redux-todoApp/src/Reducers/index.js"],"names":["createStore","initState","todoitems","caption","isCompleted","todoreducer","state","action","console","log","type","todo","filter","_","i","index","store"],"mappings":";AAAA,SACIA,WADJ,QAEO,OAFP;AAIA,OAAO,IAAMC,SAAS,GAAG;AACrBC,EAAAA,SAAS,EAAE,CAAC;AACRC,IAAAA,OAAO,EAAE,MADD;AAERC,IAAAA,WAAW,EAAE;AAFL,GAAD;AADU,CAAlB;;AAOP,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAA+B;AAAA,MAA9BC,KAA8B,uEAAtBL,SAAsB;AAAA,MAAXM,MAAW;AAC/CC,EAAAA,OAAO,CAACC,GAAR,CAAY,wBAAwBF,MAAM,CAACG,IAA3C;;AACA,UAAQH,MAAM,CAACG,IAAf;AACI,SAAK,UAAL;AACI,aAAO;AACHR,QAAAA,SAAS,+BAAMI,KAAK,CAACJ,SAAZ,IACL;AACIC,UAAAA,OAAO,EAAEI,MAAM,CAACI,IADpB;AAEIP,UAAAA,WAAW,EAAEG,MAAM,CAACH;AAFxB,SADK;AADN,OAAP;;AAQJ,SAAK,aAAL;AACI,aAAO;AACHF,QAAAA,SAAS,EAAEI,KAAK,CAACJ,SAAN,CAAgBU,MAAhB,CAAuB,UAACC,CAAD,EAAIC,CAAJ;AAAA,iBAAUA,CAAC,KAAKP,MAAM,CAACQ,KAAvB;AAAA,SAAvB;AADR,OAAP;;AAGJ,SAAK,aAAL;AACAP,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAyBH,KAAK,CAACJ,SAAN,CAAgBK,MAAM,CAACQ,KAAvB,EAA8BZ,OAAnE;AACA,aAAOG,KAAK,CAACJ,SAAN,CAAgBK,MAAM,CAACQ,KAAvB,EAA8BX,WAA9B,GAA4C,CAACE,KAAK,CAACJ,SAAN,CAAgBK,MAAM,CAACQ,KAAvB,EAA8BX,WAAlF;AAEI;AACA;AACA;AACA;;AAGJ;AACI,aAAOE,KAAK,CAACJ,SAAb;AAzBR;AA2BH,CA7BD;;AA+BA,IAAMc,KAAK,GAAGhB,WAAW,CAACK,WAAD,CAAzB;AAEA,eAAeW,KAAf","sourcesContent":["import {\n    createStore\n} from \"redux\";\n\nexport const initState = {\n    todoitems: [{\n        caption: \"Java\",\n        isCompleted: false\n    }]\n}\n\nconst todoreducer = (state = initState, action) => {\n    console.log(\"Action triggered : \" + action.type);\n    switch (action.type) {\n        case \"ADD-TODO\":\n            return {\n                todoitems: [...state.todoitems,\n                    {\n                        caption: action.todo,\n                        isCompleted: action.isCompleted\n                    }\n                ]\n            }\n        case \"REMOVE-TODO\":\n            return {\n                todoitems: state.todoitems.filter((_, i) => i !== action.index)\n            }\n        case \"TOGGLE-TODO\":\n        console.log(\"IN toggle caption = \" + state.todoitems[action.index].caption);\n        return state.todoitems[action.index].isCompleted = !state.todoitems[action.index].isCompleted            \n        \n            // return state.todoitems.map(todoitems => todoitems.index === action.index) ? {\n            //     ...state.todoitems,\n            //     isCompleted: !state.todoitems.index.isCompleted\n            // } : state.todoitems\n\n\n        default:\n            return state.todoitems;\n    }\n}\n\nconst store = createStore(todoreducer);\n\nexport default store;"]},"metadata":{},"sourceType":"module"}