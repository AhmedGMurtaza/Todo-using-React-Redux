{"ast":null,"code":"import _toConsumableArray from \"/Users/srishti/Sites/projects/training2019/react/redux-todoApp/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport { createStore } from \"redux\";\nexport var initState = {\n  todoitems: [{\n    caption: \"Java\",\n    isCompleted: false\n  }],\n  filter: \"\"\n};\n\nvar todoreducer = function todoreducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  console.log(\"Action triggered : \" + action.type);\n\n  switch (action.type) {\n    case \"ADD-TODO\":\n      state = {\n        filter: state.filter,\n        todoitems: [].concat(_toConsumableArray(state.todoitems), [{\n          caption: action.todo,\n          isCompleted: action.isCompleted\n        }])\n      };\n      break;\n\n    case \"REMOVE-TODO\":\n      state.todoitems = state.todoitems.filter(function (_, i) {\n        return i !== action.index;\n      });\n      break;\n\n    case \"TOGGLE-TODO\":\n      state.todoitems[action.index].isCompleted = !state.todoitems[action.index].isCompleted;\n      break;\n\n    case \"EDIT-TODO\":\n      state.todoitems[action.index].caption = action.newcaption;\n      break;\n    // case \"ACTIVE\":\n    // console.log(\"inside active\");\n    // state.filter=\"active\";\n    //     // state.filter.active = true;\n    //     // state.filter.all = false;\n    //     // state.filter.completed = false;\n    //     // let active_todos = [];\n    //     // for (let i = 0; i < state.todoitems.length; i++) {\n    //     //     if (state.todoitems[i].isCompleted === false) {\n    //     //         active_todos.push(state.todoitems[i]);\n    //     //     }\n    //     // }\n    //     return state\n    // case \"COMPLETED\":\n    // state.filter=\"completed\";\n    //     // let completed_todos = [];\n    //     // for (let i = 0; i < state.todoitems.length; i++) {\n    //     //     if (state.todoitems[i].isCompleted === true) {\n    //     //         completed_todos.push(state.todoitems[i]);\n    //     //     }\n    //     // }\n    //     return {\n    //         state\n    //     }\n\n    default:\n      break;\n  }\n\n  switch (action.filter) {\n    case \"ACTIVE\":\n      state.todoitems = _toConsumableArray(state.todoitems);\n      state.filter = \"ACTIVE\";\n      break;\n\n    case \"COMPLETED\":\n      state.filter = \"COMPLETED\";\n      break;\n\n    case \"ALL\":\n      state.filter = \"All\";\n      break;\n\n    default:\n      break;\n  }\n\n  return state;\n};\n\nvar store = createStore(todoreducer);\nexport default store;","map":{"version":3,"sources":["/Users/srishti/Sites/projects/training2019/react/redux-todoApp/src/Reducers/index.js"],"names":["createStore","initState","todoitems","caption","isCompleted","filter","todoreducer","state","action","console","log","type","todo","_","i","index","newcaption","store"],"mappings":";AAAA,SAAUA,WAAV,QAA4B,OAA5B;AAEA,OAAO,IAAMC,SAAS,GAAG;AACrBC,EAAAA,SAAS,EAAE,CAAC;AACRC,IAAAA,OAAO,EAAE,MADD;AAERC,IAAAA,WAAW,EAAE;AAFL,GAAD,CADU;AAKrBC,EAAAA,MAAM,EAAE;AALa,CAAlB;;AAQP,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAA+B;AAAA,MAA9BC,KAA8B,uEAAtBN,SAAsB;AAAA,MAAXO,MAAW;AAC/CC,EAAAA,OAAO,CAACC,GAAR,CAAY,wBAAwBF,MAAM,CAACG,IAA3C;;AACA,UAAQH,MAAM,CAACG,IAAf;AACI,SAAK,UAAL;AACAJ,MAAAA,KAAK,GAAG;AACJF,QAAAA,MAAM,EAAEE,KAAK,CAACF,MADV;AAEJH,QAAAA,SAAS,+BAAMK,KAAK,CAACL,SAAZ,IAAuB;AAAEC,UAAAA,OAAO,EAAEK,MAAM,CAACI,IAAlB;AAAwBR,UAAAA,WAAW,EAAEI,MAAM,CAACJ;AAA5C,SAAvB;AAFL,OAAR;AAIK;;AAEL,SAAK,aAAL;AACIG,MAAAA,KAAK,CAACL,SAAN,GAAkBK,KAAK,CAACL,SAAN,CAAgBG,MAAhB,CAAuB,UAACQ,CAAD,EAAIC,CAAJ;AAAA,eAAUA,CAAC,KAAKN,MAAM,CAACO,KAAvB;AAAA,OAAvB,CAAlB;AACA;;AAEJ,SAAK,aAAL;AACIR,MAAAA,KAAK,CAACL,SAAN,CAAgBM,MAAM,CAACO,KAAvB,EAA8BX,WAA9B,GAA4C,CAACG,KAAK,CAACL,SAAN,CAAgBM,MAAM,CAACO,KAAvB,EAA8BX,WAA3E;AACA;;AAEJ,SAAK,WAAL;AACIG,MAAAA,KAAK,CAACL,SAAN,CAAgBM,MAAM,CAACO,KAAvB,EAA8BZ,OAA9B,GAAwCK,MAAM,CAACQ,UAA/C;AACA;AAEJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACI;AA7CR;;AAiDA,UAAQR,MAAM,CAACH,MAAf;AACI,SAAK,QAAL;AACAE,MAAAA,KAAK,CAACL,SAAN,sBAAsBK,KAAK,CAACL,SAA5B;AACAK,MAAAA,KAAK,CAACF,MAAN,GAAe,QAAf;AACA;;AAEA,SAAK,WAAL;AACAE,MAAAA,KAAK,CAACF,MAAN,GAAe,WAAf;AACC;;AAED,SAAK,KAAL;AACAE,MAAAA,KAAK,CAACF,MAAN,GAAe,KAAf;AACC;;AAED;AACI;AAfR;;AAkBA,SAAOE,KAAP;AACH,CAtED;;AAwEA,IAAMU,KAAK,GAAGjB,WAAW,CAACM,WAAD,CAAzB;AAEA,eAAeW,KAAf","sourcesContent":["import {  createStore} from \"redux\";\n\nexport const initState = {\n    todoitems: [{\n        caption: \"Java\",\n        isCompleted: false\n    }],\n    filter: \"\"\n}\n\nconst todoreducer = (state = initState, action) => {\n    console.log(\"Action triggered : \" + action.type);\n    switch (action.type) {\n        case \"ADD-TODO\":\n        state = {\n            filter: state.filter,\n            todoitems: [...state.todoitems, { caption: action.todo, isCompleted: action.isCompleted  }]\n        }\n             break;\n\n        case \"REMOVE-TODO\":\n            state.todoitems = state.todoitems.filter((_, i) => i !== action.index)\n            break;\n\n        case \"TOGGLE-TODO\":\n            state.todoitems[action.index].isCompleted = !state.todoitems[action.index].isCompleted\n            break;\n\n        case \"EDIT-TODO\":\n            state.todoitems[action.index].caption = action.newcaption\n            break;\n\n        // case \"ACTIVE\":\n        // console.log(\"inside active\");\n        // state.filter=\"active\";\n        //     // state.filter.active = true;\n        //     // state.filter.all = false;\n        //     // state.filter.completed = false;\n        //     // let active_todos = [];\n        //     // for (let i = 0; i < state.todoitems.length; i++) {\n        //     //     if (state.todoitems[i].isCompleted === false) {\n        //     //         active_todos.push(state.todoitems[i]);\n        //     //     }\n        //     // }\n        //     return state\n        // case \"COMPLETED\":\n        // state.filter=\"completed\";\n        //     // let completed_todos = [];\n        //     // for (let i = 0; i < state.todoitems.length; i++) {\n        //     //     if (state.todoitems[i].isCompleted === true) {\n        //     //         completed_todos.push(state.todoitems[i]);\n        //     //     }\n        //     // }\n        //     return {\n        //         state\n        //     }\n        default:\n            break;\n    }\n\n\n    switch (action.filter){\n        case \"ACTIVE\" :\n        state.todoitems = [...state.todoitems]\n        state.filter = \"ACTIVE\"\n        break ;\n\n        case \"COMPLETED\" :\n        state.filter = \"COMPLETED\"\n         break ;\n\n        case \"ALL\":\n        state.filter = \"All\"\n         break;\n\n        default :\n            break;\n    }\n\n    return state;\n}\n\nconst store = createStore(todoreducer);\n\nexport default store;"]},"metadata":{},"sourceType":"module"}