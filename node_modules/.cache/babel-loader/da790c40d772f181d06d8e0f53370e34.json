{"ast":null,"code":"var _this = this;\n\nimport store from \"../Reducers/index\";\nimport { bindActionCreators } from \"redux\";\nexport var AddTodo = function AddTodo(todo) {\n  return {\n    type: \"ADD-TODO\",\n    todo: todo,\n    isCompleted: false\n  };\n};\nexport var DeleteTodo = function DeleteTodo(index) {\n  console.log(\"HERE \");\n  return {\n    type: \"REMOVE-TODO\",\n    index: index\n  };\n};\n\nvar submitFomHandler = function submitFomHandler(event) {\n  event.preventDefault();\n  console.log(\"Event  : \" + event.target.parentNode);\n  var value = document.getElementById(\"demo\").value;\n  store.dispatch(AddTodo(value));\n  console.log(store.getState()); //    store.subscribe( () => {\n  //    })\n  // console.log(\"Length of todoarray = \" + this.state.todoitems.length );\n};\n\nexport var keyPress = function keyPress(e, key) {\n  // console.log(\"e = \" + e + \" key = \" + key.target.value);        \n  _this.state.todoitems[e].caption = key.target.value;\n\n  _this.setState({\n    todoitems: _this.state.todoitems\n  });\n};\nexport var removeItem = function removeItem(e, key) {\n  console.log(\"e = \" + e + \" Key = \" + key);\n\n  _this.state.todoitems.splice(e, 1);\n\n  _this.setState({\n    todoitems: _this.state.todoitems\n  });\n}; // export const toggle(e){\n//      console.log(\"Inside Toggle e = \" + e );\n//      this.state.todoitems[e].isCompleted = !this.state.todoitems[e].isCompleted\n//      this.setState({\n//        todoitems: this.state.todoitems            \n//      }, () => {\n//         console.log(\"Ans ->>> \" + this.state.todoitems[e].isCompleted)\n//       })\n// } \n\nexport var checkmate = function checkmate(e, key) {\n  var li = key.target.parentNode;\n\n  _this.toggle(e);\n\n  if (_this.state.todoitems[e].isCompleted === true) {\n    li.children[1].style.textDecoration = \"line-through\";\n    li.children[1].disabled = true;\n  } else {\n    li.children[1].style.textDecoration = \"none\";\n    li.children[1].disabled = false;\n  }\n};\nexport default submitFomHandler;","map":{"version":3,"sources":["/Users/srishti/Sites/projects/training2019/react/redux-todoApp/src/Actions/Action.js"],"names":["store","bindActionCreators","AddTodo","todo","type","isCompleted","DeleteTodo","index","console","log","submitFomHandler","event","preventDefault","target","parentNode","value","document","getElementById","dispatch","getState","keyPress","e","key","state","todoitems","caption","setState","removeItem","splice","checkmate","li","toggle","children","style","textDecoration","disabled"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,mBAAlB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AAEA,OAAO,IAAMC,OAAO,GAAK,SAAZA,OAAY,CAACC,IAAD,EAAS;AAC9B,SAAO;AAACC,IAAAA,IAAI,EAAG,UAAR;AAAoBD,IAAAA,IAAI,EAAJA,IAApB;AAA0BE,IAAAA,WAAW,EAAG;AAAxC,GAAP;AACH,CAFM;AAGP,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,KAAD,EAAW;AACjCC,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACA,SAAO;AAAEL,IAAAA,IAAI,EAAG,aAAT;AAAwBG,IAAAA,KAAK,EAALA;AAAxB,GAAP;AACH,CAHM;;AAKN,IAAMG,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAAC,KAAK,EAAG;AAC9BA,EAAAA,KAAK,CAACC,cAAN;AACAJ,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAcE,KAAK,CAACE,MAAN,CAAaC,UAAvC;AACD,MAAIC,KAAK,GAAGC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,EAAgCF,KAA5C;AACCf,EAAAA,KAAK,CAACkB,QAAN,CAAehB,OAAO,CAACa,KAAD,CAAtB;AACAP,EAAAA,OAAO,CAACC,GAAR,CAAYT,KAAK,CAACmB,QAAN,EAAZ,EAL8B,CAMlC;AAEA;AACI;AAEH,CAXA;;AAcD,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,CAAD,EAAGC,GAAH,EAAS;AAC7B;AACA,EAAA,KAAI,CAACC,KAAL,CAAWC,SAAX,CAAqBH,CAArB,EAAwBI,OAAxB,GAAkCH,GAAG,CAACT,MAAJ,CAAWE,KAA7C;;AACA,EAAA,KAAI,CAACW,QAAL,CAAc;AACVF,IAAAA,SAAS,EAAE,KAAI,CAACD,KAAL,CAAWC;AADZ,GAAd;AAGH,CANM;AASP,OAAO,IAAMG,UAAU,GAAG,SAAbA,UAAa,CAACN,CAAD,EAAGC,GAAH,EAAS;AAC5Bd,EAAAA,OAAO,CAACC,GAAR,CAAY,SAASY,CAAT,GAAa,SAAb,GAAyBC,GAArC;;AACC,EAAA,KAAI,CAACC,KAAL,CAAWC,SAAX,CAAqBI,MAArB,CAA4BP,CAA5B,EAA8B,CAA9B;;AACA,EAAA,KAAI,CAACK,QAAL,CAAc;AACXF,IAAAA,SAAS,EAAG,KAAI,CAACD,KAAL,CAAWC;AADZ,GAAd;AAGP,CANM,C,CASP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,OAAO,IAAMK,SAAS,GAAG,SAAZA,SAAY,CAACR,CAAD,EAAGC,GAAH,EAAS;AAC9B,MAAIQ,EAAE,GAAGR,GAAG,CAACT,MAAJ,CAAWC,UAApB;;AAEA,EAAA,KAAI,CAACiB,MAAL,CAAYV,CAAZ;;AACA,MAAG,KAAI,CAACE,KAAL,CAAWC,SAAX,CAAqBH,CAArB,EAAwBhB,WAAxB,KAAwC,IAA3C,EAAgD;AAC5CyB,IAAAA,EAAE,CAACE,QAAH,CAAY,CAAZ,EAAeC,KAAf,CAAqBC,cAArB,GAAoC,cAApC;AACAJ,IAAAA,EAAE,CAACE,QAAH,CAAY,CAAZ,EAAeG,QAAf,GAA0B,IAA1B;AACH,GAHD,MAII;AACAL,IAAAA,EAAE,CAACE,QAAH,CAAY,CAAZ,EAAeC,KAAf,CAAqBC,cAArB,GAAoC,MAApC;AACAJ,IAAAA,EAAE,CAACE,QAAH,CAAY,CAAZ,EAAeG,QAAf,GAA0B,KAA1B;AACH;AACJ,CAZM;AAaP,eAAezB,gBAAf","sourcesContent":["import store from \"../Reducers/index\";\nimport { bindActionCreators } from \"redux\";\n\nexport const AddTodo  =  (todo) =>{\n    return {type : \"ADD-TODO\", todo ,isCompleted : false }\n}\nexport const DeleteTodo = (index) => { \n    console.log(\"HERE \");\n    return { type : \"REMOVE-TODO\", index }\n}\n\n const submitFomHandler = event =>{\n    event.preventDefault();    \n    console.log(\"Event  : \" + event.target.parentNode );\n   var value = document.getElementById(\"demo\").value;\n    store.dispatch(AddTodo(value));\n    console.log(store.getState());\n//    store.subscribe( () => {\n       \n//    })\n    // console.log(\"Length of todoarray = \" + this.state.todoitems.length );\n\n}\n\n\nexport const keyPress = (e,key)=>{\n    // console.log(\"e = \" + e + \" key = \" + key.target.value);        \n    this.state.todoitems[e].caption = key.target.value;\n    this.setState({\n        todoitems: this.state.todoitems\n    })\n}\n\n\nexport const removeItem = (e,key)=>{\n       console.log(\"e = \" + e + \" Key = \" + key);            \n        this.state.todoitems.splice(e,1);\n        this.setState({\n           todoitems : this.state.todoitems\n        })\n}\n\n\n// export const toggle(e){\n//      console.log(\"Inside Toggle e = \" + e );\n//      this.state.todoitems[e].isCompleted = !this.state.todoitems[e].isCompleted\n//      this.setState({\n//        todoitems: this.state.todoitems            \n//      }, () => {\n//         console.log(\"Ans ->>> \" + this.state.todoitems[e].isCompleted)\n//       })\n// } \n\n\nexport const checkmate = (e,key)=>{\n    var li = key.target.parentNode;\n   \n    this.toggle(e);\n    if(this.state.todoitems[e].isCompleted === true){          \n        li.children[1].style.textDecoration=\"line-through\";\n        li.children[1].disabled = true;\n    }\n    else{\n        li.children[1].style.textDecoration=\"none\";\n        li.children[1].disabled = false;\n    }   \n}\nexport default submitFomHandler;"]},"metadata":{},"sourceType":"module"}