{"ast":null,"code":"import _classCallCheck from \"/Users/srishti/Sites/projects/training2019/react/redux-todoApp/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/srishti/Sites/projects/training2019/react/redux-todoApp/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/srishti/Sites/projects/training2019/react/redux-todoApp/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/srishti/Sites/projects/training2019/react/redux-todoApp/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/srishti/Sites/projects/training2019/react/redux-todoApp/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/srishti/Sites/projects/training2019/react/redux-todoApp/src/Components/List.js\";\nimport React, { Component } from 'react';\nimport store from \"../Reducers/index\";\nimport checkmate, { DeleteTodo, ToggleTodo, EditTodo } from \"../Actions/Action\";\nimport keyPress from \"../Actions/Action\";\nimport removeItem from \"../Actions/Action\";\nimport \"../style.css\"; // import initState from \"../Reducers/index\";\n\nvar List =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(List, _Component);\n\n  function List() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, List);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(List)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handleRemove = function (index) {\n      store.dispatch(DeleteTodo(index));\n    };\n\n    _this.handleToggle = function (index) {\n      store.dispatch(ToggleTodo(index));\n    };\n\n    _this.handleKeyPress = function (index, e) {\n      console.log(\"Index : \" + index + \" event \" + e + \" Value = \" + e.target.value);\n      store.dispatch(EditTodo(index, e.target.value));\n    };\n\n    return _this;\n  }\n\n  _createClass(List, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      // console.log(\"All filter = \" + store.getState().filter + \" \" );\n      // if(store.getState().filter === \"all\") {\n      return React.createElement(\"ul\", {\n        className: \"list-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, this.props.todo.todo.map(function (item, key) {\n        return React.createElement(\"li\", {\n          key: key,\n          className: \"list-group-item\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"checkbox\",\n          className: \"float-left my-3 strike\",\n          onClick: _this2.handleToggle.bind(_this2, key),\n          checked: item.isCompleted ? true : false,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        }), React.createElement(\"input\", {\n          type: \"text\",\n          value: item.caption,\n          className: \"myinput strike\",\n          onChange: _this2.handleKeyPress.bind(_this2, key),\n          style: {\n            textDecoration: item.isCompleted ? \"line-through\" : \"none\"\n          },\n          disabled: item.isCompleted ? true : false,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        }), React.createElement(\"button\", {\n          className: \"btn btn-danger mybtn float-right\",\n          onClick: _this2.handleRemove.bind(_this2, key),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37\n          },\n          __self: this\n        }, \" Delete \"));\n      }));\n    }\n  }]);\n\n  return List;\n}(Component);\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    removeTodo: function removeTodo() {\n      return dispatch(DeleteTodo());\n    },\n    editTodo: function editTodo() {\n      return dispatch(EditTodo());\n    },\n    toggleTodo: function toggleTodo() {\n      return dispatch(ToggleTodo());\n    }\n  };\n};\n\nexport default List;","map":{"version":3,"sources":["/Users/srishti/Sites/projects/training2019/react/redux-todoApp/src/Components/List.js"],"names":["React","Component","store","checkmate","DeleteTodo","ToggleTodo","EditTodo","keyPress","removeItem","List","handleRemove","index","dispatch","handleToggle","handleKeyPress","e","console","log","target","value","props","todo","map","item","key","bind","isCompleted","caption","textDecoration","mapDispatchToProps","removeTodo","editTodo","toggleTodo"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport store from \"../Reducers/index\";\nimport checkmate, { DeleteTodo, ToggleTodo ,EditTodo} from \"../Actions/Action\";\nimport keyPress from \"../Actions/Action\";\nimport removeItem from \"../Actions/Action\";\nimport \"../style.css\";\n\n// import initState from \"../Reducers/index\";\n\nclass List extends Component {\n\n    handleRemove = (index)=>{\n        store.dispatch(DeleteTodo(index));\n    }\n    handleToggle = (index) => {\n        store.dispatch(ToggleTodo(index));\n    }\n\n    handleKeyPress = (index,e) => {\n        console.log(\"Index : \" + index +  \" event \" + e + \" Value = \" + e.target.value);\n         store.dispatch(EditTodo(index,e.target.value));\n    }\n\n    render() {\n\n\n        // console.log(\"All filter = \" + store.getState().filter + \" \" );\n        // if(store.getState().filter === \"all\") {\n          return (\n            <ul className = \"list-group\">\n                {this.props.todo.todo.map( (item,key) =>        \n            <li key = {key} className=\"list-group-item\"> \n          \n            <input type=\"checkbox\" className=\"float-left my-3 strike\" onClick={this.handleToggle.bind(this,key)} checked = { item.isCompleted ? true : false }/> \n            \n            <input type=\"text\" value={item.caption} className=\"myinput strike\" onChange={this.handleKeyPress.bind(this,key)} style={{textDecoration: item.isCompleted ? \"line-through\":\"none\"}} disabled={item.isCompleted ? true : false}/>              \n            <button className=\"btn btn-danger mybtn float-right\" onClick ={this.handleRemove.bind(this,key)} > Delete </button>               \n            </li>)}\n            </ul>\n            )\n        \n       \n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return{\n        removeTodo :()=> dispatch(DeleteTodo()),\n        editTodo :() => dispatch(EditTodo()),\n        toggleTodo :() => dispatch(ToggleTodo())\n    }\n}\n\nexport default List;\n"]},"metadata":{},"sourceType":"module"}